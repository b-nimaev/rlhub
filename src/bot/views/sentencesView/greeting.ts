import { ExtraEditMessageText } from "telegraf/typings/telegram-types"
import { translation, Translation } from "../../../models/ISentence"
import rlhubContext from "../../models/rlhubContext"
import formatMoney from "../../utlis/format_money"

// –ø—Ä–∏ –≤—Ö–æ–¥–µ
export default async function greeting(ctx: rlhubContext) {

    try {

        const extra: ExtraEditMessageText = {
            parse_mode: 'HTML',
            reply_markup: {
                inline_keyboard: [
                    [
                        {
                            text: '–î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥',
                            callback_data: 'translate_sentences'
                        }
                    ],
                    [
                        {
                            text: '–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è',
                            callback_data: 'add_sentence'
                        }
                    ], [
                        {
                            text: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
                            callback_data: 'my_sentences'
                        }
                    ],
                    [
                        {
                            text: '–ù–∞–∑–∞–¥',
                            callback_data: 'home'
                        }
                    ],
                ]
            }
        }

        let sentences: translation[] = await Translation.find()

        let left = 100000 - sentences.length



        let message = `<b>–ü–µ—Ä–µ–≤–æ–¥ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π üöÄ</b> \n\n`
        message += `–ù–∞—à–∞ —Ü–µ–ª—å —Å–æ–±—Ä–∞—Ç—å 100 000 –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –∏–∑ —Ä–∞–∑–Ω—ã—Ö —Å—Ñ–µ—Ä –∂–∏–∑–Ω–∏, –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—à–∏–Ω–Ω–æ–≥–æ-–±—É—Ä—è—Ç—Å–∫–æ–≥–æ —è–∑—ã–∫–∞\n\n`
        message += `–ê –ß—Ç–æ–±—ã –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –Ω—É–∂–Ω—ã —Å–∞–º–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–∞ <b>—Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ</b>. \n\n–î–æ –∫–æ–Ω—Ü–∞ —Ü–µ–ª–∏ –æ—Å—Ç–∞–ª–æ—Å—å <b>${formatMoney(left)} –ø–µ—Ä–µ–≤–æ–¥–æ–≤</b>`

        ctx.updateType === 'message' ? await ctx.reply(message, extra) : false
        ctx.updateType === 'callback_query' ? await ctx.editMessageText(message, extra) : false

    } catch (err) {

        console.error(err);
    }

}